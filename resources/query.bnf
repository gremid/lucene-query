query = clause (<ws*> conjunction <ws+> clause)*
clause = mods? <ws*> (field <':'>)? (range-query / sub-query / value-query)

<conjunction> = and | or
<mods> = must | must-not | not

field = all / term

<value-query> = value ((boost fuzzy?) / (fuzzy boost?))?
<range-query> = range boost?
sub-query = <'('> query <')'> boost?

value = all
      / term
      / pattern
      / regexp      
      / quoted
      / number

<bound> = all / term / quoted / number
range = ('[' | '{') bound <ws+> <'TO'> <ws+> bound (']'|'}')

boost = <'^'> number
fuzzy = <'~'> ((num-char)+ (('.' num-char+)? term-char*) | term-char*)

and = <'AND'> | <'&&'>
or = <'OR'> | <'||'>
not = <'NOT'> | <'!'>
must = <'+'>
must-not = <'-'>

all = '*'
term = term-start-char term-char*
pattern = (term-start-char | '*' | '?') (term-char | '*' | '?')*
quoted = <'"'> quoted-char* <'"'>
regexp = <'/'> #'((\\/)|[^/])+' <'/'>

<num-char> = #'[0-9]'
<number> = num-char+ ('.' num-char+)?
<escaped-char> = #'\\.'
<term-start-char> = #'[^ \t\n\r\u3000\+\-\!\(\)\:\^\[\]\"\{\}\~\*\?\\/]' | escaped-char
<term-char> = term-start-char | '-' | '+'
<ws> = #'[ \t\n\r\u3000]'
<quoted-char> = #'[^"\\]' | escaped-char
